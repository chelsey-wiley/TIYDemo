{"version":3,"sources":["components/RecordingComponent.js"],"names":["window","FC","undefined","RecordingComponent","constraints","recBtn","document","querySelector","pauseResBtn","stopBtn","videoElement","dataElement","downloadLink","controls","errorCallback","error","console","log","mediaRecorder","chunks","count","startRecording","stream","MediaRecorder","isTypeSupported","options","mimeType","textContent","start","url","URL","webkitURL","src","createObjectURL","play","ondataavailable","e","push","data","onstop","blob","Blob","type","videoURL","href","innerHTML","rand","Math","floor","random","name","setAttribute","onBtnRecordClicked","navigator","getUserMedia","alert","disabled","onBtnStopClicked","stop","onPauseResumeClicked","pause","resume","message","React","Component"],"mappings":"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","file":"RecordingComponent.js","sourcesContent":["if (window.FC === undefined) {window.FC = {};}\n\n(function() {\n  'use strict';\n\n  class RecordingComponent extends React.Component {\n\n      thing(){\n\n    var constraints = {\"audio\": true, \"video\": {  \"mandatory\": {  \"minWidth\": 640,  \"maxWidth\": 640, \"minHeight\": 480, \"maxHeight\": 480 }, \"optional\": [] } };\n\n    var recBtn = document.querySelector('button#rec');\n    var pauseResBtn = document.querySelector('button#pauseRes');\n    var stopBtn = document.querySelector('button#stop');\n\n    var videoElement = document.querySelector('video');\n    var dataElement = document.querySelector('#data');\n    var downloadLink = document.querySelector('a#downloadLink');\n\n    videoElement.controls = false;\n\n    function errorCallback(error){\n    \tconsole.log('navigator.getUserMedia error: ', error);\n    }\n\n\n\n    var mediaRecorder;\n    var chunks = [];\n    var count = 0;\n\n    function startRecording(stream) {\n    \tif (typeof MediaRecorder.isTypeSupported == 'function'){\n    \t\tif (MediaRecorder.isTypeSupported('video/webm;codecs=h264')) {\n    \t\t  var options = {mimeType: 'video/webm;codecs=h264'};\n    \t\t} else if (MediaRecorder.isTypeSupported('video/webm;codecs=vp9')) {\n    \t\t  var options = {mimeType: 'video/webm;codecs=vp9'};\n    \t\t} else if (MediaRecorder.isTypeSupported('video/webm;codecs=vp8')) {\n    \t\t  var options = {mimeType: 'video/webm;codecs=vp8'};\n    \t\t}\n\n    \t\tmediaRecorder = new MediaRecorder(stream, options);\n    \t}else{\n\n    \t\tmediaRecorder = new MediaRecorder(stream);\n    \t}\n\n    \tpauseResBtn.textContent = \"Pause\";\n\n    \tmediaRecorder.start(10);\n\n    \tvar url = window.URL || window.webkitURL;\n    \tvideoElement.src = url ? url.createObjectURL(stream) : stream;\n    \tvideoElement.play();\n\n    \tmediaRecorder.ondataavailable = function(e) {\n\n    \t\tchunks.push(e.data);\n    \t};\n\n\n\n    \tmediaRecorder.onstop = function(){\n\n\n    \t\tvar blob = new Blob(chunks, {type: \"video/webm\"});\n    \t\tchunks = [];\n\n    \t\tvar videoURL = window.URL.createObjectURL(blob);\n\n    \t\tdownloadLink.href = videoURL;\n    \t\tvideoElement.src = videoURL;\n    \t\tdownloadLink.innerHTML = 'Download video file';\n\n    \t\tvar rand =  Math.floor((Math.random() * 10000000));\n    \t\tvar name  = \"video_\"+rand+\".webm\" ;\n\n    \t\tdownloadLink.setAttribute( \"download\", name);\n    \t\tdownloadLink.setAttribute( \"name\", name);\n    \t};\n\n\n    }\n\n\n    function onBtnRecordClicked (){\n    \t if (typeof MediaRecorder === 'undefined' || !navigator.getUserMedia) {\n    \t\talert('MediaRecorder not supported on your browser, use Firefox 30 or Chrome 49 instead.');\n    \t}else {\n    \t\tnavigator.getUserMedia(constraints, startRecording, errorCallback);\n    \t\trecBtn.disabled = true;\n    \t\tpauseResBtn.disabled = false;\n    \t\tstopBtn.disabled = false;\n    \t}\n    }\n\n    function onBtnStopClicked(){\n    \tmediaRecorder.stop();\n    \tvideoElement.controls = true;\n\n    \trecBtn.disabled = false;\n    \tpauseResBtn.disabled = true;\n    \tstopBtn.disabled = true;\n    }\n\n    function onPauseResumeClicked(){\n    \tif(pauseResBtn.textContent === \"Pause\"){\n    \t\tconsole.log(\"pause\");\n    \t\tpauseResBtn.textContent = \"Resume\";\n    \t\tmediaRecorder.pause();\n    \t\tstopBtn.disabled = true;\n    \t}else{\n    \t\tconsole.log(\"resume\");\n    \t\tpauseResBtn.textContent = \"Pause\";\n    \t\tmediaRecorder.resume();\n    \t\tstopBtn.disabled = false;\n    \t}\n    \trecBtn.disabled = true;\n    \tpauseResBtn.disabled = false;\n    }\n\n\n    function log(message){\n    \tdataElement.innerHTML = dataElement.innerHTML+'<br>'+message ;\n    }\n\n\n\n    // render (){\n    //   return <div> Recording Component\n    //   </div>\n    // }\n  }  \n  }\n  FC.RecordingComponent = RecordingComponent;\n}());\n"]}