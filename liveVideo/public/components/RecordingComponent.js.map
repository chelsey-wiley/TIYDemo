{"version":3,"sources":["components/RecordingComponent.js"],"names":["window","FC","undefined","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","RecordingComponent","console","log","alert","video","audio","clickSupport","startRecording","error","videoStream","clickRec","clickPauseRes","clickStop","React","Component"],"mappings":";;;;;;;;;;AAAA,IAAIA,OAAOC,EAAP,KAAcC,SAAlB,EAA6B;AAACF,SAAOC,EAAP,GAAY,EAAZ;AAAgB;;AAG7C,aAAW;AACV;;AAEAE,YAAUC,YAAV,GACAD,UAAUC,YAAV,IAA0BD,UAAUE,kBAApC,IAA0DF,UAAUG,eAApE,IAAuFH,UAAUI,cAAjG,IACA,IAFA;;AAHU,MAOJC,kBAPI;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,qCASM;AACZC,gBAAQC,GAAR,CAAY,iBAAZ;AACA,YAAGP,UAAUC,YAAV,KAA2B,IAA9B,EAAmC;AACjCO,gBAAM,4CAAN;AACAF,kBAAQC,GAAR,CAAY,YAAZ;AACD,SAHD,MAII;AACFE,iBAAO;AACPC,iBAAO;AACPJ,kBAAQC,GAAR,CAAY,aAAZ;AACD;AACF;AApBO;AAAA;AAAA,iCAsBE;AACRD,gBAAQC,GAAR,CAAa,gBAAb;AACAP,kBAAUC,YAAV,CAAuBU,YAAvB,EAAqCC,cAArC,EAAqDC,KAArD;AACD;AAzBO;AAAA;AAAA,sCA2BO;AACbP,gBAAQC,GAAR,CAAa,mBAAb;AACD;AA7BO;AAAA;AAAA,kCA+BG;AACTD,gBAAQC,GAAR,CAAa,cAAb;AACD;AAjCO;AAAA;AAAA,+BAsCA;AAAA;;AACN,YAAIO,cAAc,IAAlB;;AAIA,eACE;AAAA;AAAA,YAAK,WAAU,oBAAf;AACE;AAAA;AAAA;AAAA;AAAA,WADF;AAEE,yCAAO,IAAG,OAAV,EAAkB,cAAlB,EAA2B,cAA3B,GAFF;AAGE;AAAA;AAAA,cAAQ,IAAG,WAAX,EAAuB,SAAS,mBAAM;AAAC,uBAAKH,YAAL;AAAqB,eAA5D;AAAA;AAAA,WAHF;AAKE;AAAA;AAAA,cAAQ,IAAG,QAAX,EAAoB,SAAS,mBAAM;AAAC,uBAAKI,QAAL;AAAiB,eAArD;AAAA;AAAA,WALF;AAOE;AAAA;AAAA,cAAQ,IAAG,UAAX,EAAsB,SAAS,mBAAM;AAAC,uBAAKC,aAAL;AAAsB,eAA5D;AAAA;AAAA,WAPF;AASE;AAAA;AAAA,cAAQ,IAAG,MAAX,EAAkB,SAAS,mBAAM;AAAC,uBAAKC,SAAL;AAAkB,eAApD;AAAA;AAAA;AATF,SADF;AAeD;AA1DO;;AAAA;AAAA,IAOuBC,MAAMC,SAP7B;;AA4DVrB,KAAGO,kBAAH,GAAwBA,kBAAxB;AACD,CA7DA,GAAD","file":"RecordingComponent.js","sourcesContent":["if (window.FC === undefined) {window.FC = {};}\n\n\n(function() {\n  'use strict';\n\n  navigator.getUserMedia =\n  navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia ||\n  null;\n\n  class RecordingComponent extends React.Component {\n\n    clickSupport(){\n      console.log('clicked support');\n      if(navigator.getUserMedia === null){\n        alert('Sorry! This will not work on your browser.');\n        console.log('no support');\n      }\n      else{\n        video: true;\n        audio: true;\n        console.log('has support');\n      }\n    };\n\n    clickRec(){\n      console.log ('clicked record');\n      navigator.getUserMedia(clickSupport, startRecording, error);\n    };\n\n    clickPauseRes(){\n      console.log ('clicked Pause/Res');\n    };\n\n    clickStop(){\n      console.log ('clicked stop');\n    };\n\n\n\n\n    render(){\n      var videoStream = null;\n\n\n\n      return (\n        <div className=\"recorder-container\">\n          <h1>Recorder</h1>\n          <video id=\"video\" controls autoPlay></video>\n          <button id=\"supported\" onClick={() => {this.clickSupport();}}>Support</button>\n\n          <button id=\"record\" onClick={() => {this.clickRec();}}>Record</button>\n\n          <button id=\"pauseRes\" onClick={() => {this.clickPauseRes();}}>Pause</button>\n\n          <button id=\"stop\" onClick={() => {this.clickStop();}}>Stop</button>\n\n        </div>\n      )\n\n    };\n  }\n  FC.RecordingComponent = RecordingComponent;\n}());\n"]}